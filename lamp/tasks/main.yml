---
# task file for lamp

- name: Update apt cache
  apt:
    update_cache: true

- name: Install LAMP stack
  become: true
  apt:
    name: "{{ item }}"
    state: latest
    update_cache: true
  loop:
    - apache2
    - mysql-server
    - php, libapache2-mod-php, php-mysql, php-xml, php-gd, php-imap, php-mysql
    - python3-pip
  # notify: "Stop Nginx"

- name: Install mysql-connector-python
  pip:
    name: pymysql
    state: latest
  become: true
  # notify: "Restart Apache"


# В HANDLERS
- name: Stop Nginx service
  become: true
  systemd:
    name: nginx
    state: stopped

# В HANDLERS
- name: Manage Apache
  become: true
  systemd:
    name: apache2
    state: restarted

- name: Copy .my.cnf template file
  template:
    src: templates/.my.cnf.j2
    dest: /root/.my.cnf
    owner: root
    group: root
    mode: 0600
  notify: Restart MySQL 

- name: "UFW - Allow HTTP on port {{ http_port }}"
  ufw:
    rule: allow
    port: "{{ http_port }}"
    proto: tcp

- name: Change password for mysql root user
  mysql_user:
        name: "{{ mysql_root }}"
        password: "{{ mysql_root_password }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock
        host_all: true
        check_implicit_admin: true

- name: Create MySQL database
  mysql_db:
        login_host: "{{ mysql_host }}"
        login_user: "{{ mysql_root }}"
        login_password: "{{ db_user_password }}"
        name: "{{ db_name }}"
        state: present


- name: Create MySQL user
  mysql_user:
        login_host: "{{ mysql_host }}"
        login_user: "{{mysql_root}}"
        login_password: "{{ mysql_root_password }}"
        name: "{{db_user}}"
        password: "{{ db_user_password }}"
        priv: "*.*:ALL"
        state: present

- name: Copy table.sql to remote server
  copy:
    src: "{{mysql_dump_file_local}}"
    dest: "{{mysql_file_remote}}"

- name: Copy dump.csv to remote server
  copy:
    src: "{{mysql_csv_file_local}}"
    dest: "{{mysql_file_remote}}"

- name: Import table structure dump into testdb
  mysql_db:
    name: "{{ db_name }}"
    state: import
    target: "{{ mysql_dump_file_remote }}"
    login_user: "{{ db_user }}"
    login_password: "{{ db_user_password }}"
  become: true

